import { useCallback, useState } from 'react'
import axios from 'axios'
import { useForm } from 'react-hook-form'
import { createFileRoute, Link } from '@tanstack/react-router'
import { toast } from 'sonner'
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
} from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Button } from '@/components/ui/button'
import { CheckCircleIcon } from 'lucide-react'

export const Route = createFileRoute('/_authenticated/student/forgot-password')({
  component: RouteComponent,
})

function RouteComponent() {
  // Use this for React Hook Form
  const {
    register,
    handleSubmit,
    watch,
    reset,
    formState: { errors },
  } = useForm()
  const [isLoading, setIsLoading] = useState(false);
  const [linkSent,setLinkSent] = useState(false);

  const handleSendEmail = useCallback(
    async (data) => {
      setIsLoading(true)
      try {
        let response = await axios.post('/admin/forgotPassword', data)
        response = response.data
        if (response.success) {
          toast.success(response.message)
          reset();
          setLinkSent(true)
        }
      } catch (error) {
        console.log('error', error)
        toast.error(error.response.data.message)
      } finally {
        setIsLoading(false);
      }
    },
    [axios, toast,reset]
  )

  return (
    <div className='bg-muted flex min-h-svh flex-col items-center justify-center p-6 md:p-10'>
      <div className='w-full max-w-sm md:max-w-lg'>
         {
                            linkSent &&
                            <>
                                <div className='text-center mt-8'><CheckCircleIcon className='inline-block w-32 text-success' /></div>
                                <p className='my-4 text-xl font-bold text-center'>Link Sent</p>
                                <p className='mt-4 mb-8 font-semibold text-center'>Check your email to reset password</p>
                                <div className='text-center mt-4'><Link to='/admin/login' onClick={() => setLinkSent(false)}><Button size='sm' className='text-sm'>Login</Button></Link></div>

                            </>
                        }
{!linkSent && 
        <Card>
          <CardHeader className='text-center'>
            <CardTitle className='text-xl'>Forgot Password</CardTitle>
            <CardDescription>
              We will send password reset link on your email Id
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit(handleSendEmail)}>
              <div className='grid gap-6'>
                <div className='grid gap-6'>
                  <div className='grid gap-3'>
                    <Label
                      htmlFor='email'
                      className={`${errors.email && `text-red-500`}`}
                    >
                      Email
                    </Label>
                    <Input
                      type='text'
                      placeholder='Email'
                      {...register('email', {
                        required: true,
                      })}
                    />
                    {errors.email && (
                      <span className='text-red-500'>required</span>
                    )}
                  </div>

                  <Button type='submit' className='w-full' disabled={isLoading} isLoading={isLoading}>
                   
                    Send Reset Link
                  </Button>
                </div>
                <div className='text-center text-sm'>
                  Go To
                  <Link
                    to='/admin/login'
                    className='ml-1 underline underline-offset-4'
                  >
                    Login
                  </Link>
                </div>
              </div>
            </form>
          </CardContent>
        </Card>}
      </div>
    </div>
  )
}
